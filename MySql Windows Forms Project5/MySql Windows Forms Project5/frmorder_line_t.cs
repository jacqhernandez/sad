/*
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* This code is generated by a tool and is provided "as is", without warranty of any kind,
* express or implied, including but not limited to the warranties of merchantability,
* fitness for a particular purpose and non-infringement.
* In no event shall the authors or copyright holders be liable for any claim, damages or
* other liability, whether in an action of contract, tort or otherwise, arising from,
* out of or in connection with the software or the use or other dealings in the software.
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using System.Data.Objects;

namespace MySql_Windows_Forms_Project5
{
	public partial class frmorder_line_t : Form
	{
		private Model1Entities ctx;
		
		public frmorder_line_t()
		{
			InitializeComponent();
		}
		
		private void frmorder_line_t_Load(object sender, EventArgs e)
		{
			ctx = new Model1Entities();
			ObjectResult<order_line_t> _entities = ctx.order_line_t.Execute(MergeOption.AppendOnly);
			order_line_tBindingSource.DataSource = _entities;
			bindingNavigatorAddNewItem.Enabled = false;
			bindingNavigatorCountItem.Enabled = false;
			bindingNavigatorDeleteItem.Enabled = false;
			bindingNavigatorMoveFirstItem.Enabled = false;
			bindingNavigatorMovePreviousItem.Enabled = false;
			bindingNavigatorPositionItem.Enabled = false;
			bindingNavigatorMoveNextItem.Enabled = false;
			bindingNavigatorMoveLastItem.Enabled = false;
			toolStripButton1.Enabled = true;
			dataGridView1.AutoGenerateColumns = false;
			string strConn2 = "port=3306;server=localhost;user id=root;password=root;database=pinevalley;";
			MySql.Data.MySqlClient.MySqlDataAdapter ad2 = null;
			System.Windows.Forms.DataGridViewComboBoxColumn colorder_id = new System.Windows.Forms.DataGridViewComboBoxColumn();
			colorder_id.DataSource = ctx.order_t.ToList();
			colorder_id.DataPropertyName = "order_id";
			colorder_id.DisplayMember = "customer_id";
			colorder_id.ValueMember = "order_id";
			colorder_id.HeaderText = "order_id";
			colorder_id.Name = "colorder_id";
			colorder_id.ToolTipText = "Pick the column from the foreign table to use as friendly value for this lookup.";
			dataGridView1.Columns.Add(colorder_id);
			System.Windows.Forms.DataGridViewComboBoxColumn colproduct_id = new System.Windows.Forms.DataGridViewComboBoxColumn();
			colproduct_id.DataSource = ctx.product_t.ToList();
			colproduct_id.DataPropertyName = "product_id";
			colproduct_id.DisplayMember = "product_line_id";
			colproduct_id.ValueMember = "product_id";
			colproduct_id.HeaderText = "product_id";
			colproduct_id.Name = "colproduct_id";
			colproduct_id.ToolTipText = "Pick the column from the foreign table to use as friendly value for this lookup.";
			dataGridView1.Columns.Add(colproduct_id);
			System.Windows.Forms.DataGridViewTextBoxColumn colordered_quantity = new System.Windows.Forms.DataGridViewTextBoxColumn();
			colordered_quantity.DataPropertyName = "ordered_quantity";
			colordered_quantity.HeaderText = "ordered_quantity";
			colordered_quantity.Name = "colordered_quantity";
			dataGridView1.Columns.Add(colordered_quantity);
			dataGridView1.DataSource = _entities;
			
		}
		
		private void Save_Click(object sender, EventArgs e)
		{
			if (!this.Validate()) return;
			order_line_tBindingSource.EndEdit();
			ctx.SaveChanges();
			
		}
		
		private void frmorder_line_t_FormClosing(object sender, FormClosingEventArgs e)
		{
			e.Cancel = false;
		}
		
		private void dataGridView1_CellValidating(object sender, DataGridViewCellValidatingEventArgs e)
		{
			string s;
			DataGridViewRow row = dataGridView1.Rows[e.RowIndex];
			object value = e.FormattedValue;
			e.Cancel = false;
			row.ErrorText = "";
			if (row.IsNewRow) return;
			if (e.ColumnIndex == 2)
			{
				int v;
				if( (value is DBNull) || string.IsNullOrEmpty( value.ToString() ) )
				{
					e.Cancel = true;
					row.ErrorText = "The field ordered_quantity is required";
					return;
				}
				s = value.ToString();
				if( !int.TryParse( s, out v ) )
				{
					e.Cancel = true;
					row.ErrorText = "The field ordered_quantity must be int.";
					return;
				}
			}
		}
		
		private void dataGridView1_DataError(object sender, DataGridViewDataErrorEventArgs e)
		{
			dataGridView1.Rows[e.RowIndex].ErrorText = e.Exception.Message;
			e.Cancel = true;
		}
		
		
		
		private void bindingNavigatorAddNewItem_Click(object sender, EventArgs e)
		{
			order_line_tBindingSource.AddNew();
		}
	}
}
